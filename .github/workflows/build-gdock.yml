#=================================================
#   Description: Build G-DOCK FROM LEAN'S LEDE
#   Author: JK
#=================================================

name: Build G-DOCK-passwall-20200303

on: 
  release:
    types: [published]
#  push:
#    branches: 
#      - master
#  schedule:
#    - cron: 0 22 * * *
#  watch:
#    types: [started]
    
jobs:
  build:
    runs-on: ubuntu-latest
#    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
          
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

          # 利用挂载在 /mnt/ 的 14G 额外空间:
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h


    - name: Clone source code
      run: |
        git clone https://github.com/coolsnowwolf/lede lede
        
    - name: Clone passwall code    
      run: cd lede/package &&  git clone https://github.com/Lienol/openwrt-package.git                 

    - name: Update feeds
      run: cd lede && ./scripts/feeds update -a

    - name: Install feeds
      run: cd lede && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cp -f gdock.config ./lede/.config
        chmod +x diy.sh
        cd lede
        ../diy.sh
        make defconfig

    - name: Download package
      run: |
        echo -e "$(nproc) thread build."
        cd lede && make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile firmware
      run: |
        cd lede
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin

    # - name: Build
      # run: |
        # cd lede
        # echo -e "$(nproc) thread build."
        # make -j$(nproc) V=s

 ######把上面生成的.config文件拷贝到bin/targets/ipq40xx/generic/my.config，从而在下载固件时，一起下载回来。
    - name: Copy .config  to  ./bin/targets/ipq40xx/generic/my.config
      run: |
        cd lede
        cp  .config   ./bin/targets/ipq40xx/generic/my.config  

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: G-DOCK-passwall20200303
        path: ./lede/bin
